@{
    var formDictionary = new Dictionary<string, object> {
        {"name", "lostForm"},
        {"novalidate", "novalidate"}
    };
}

@if (Html.ValidationSummary() != null) {
    <div class="alert alert-dismissable alert-danger">
        <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
        <i class="fa fa-times-circle"></i>&nbsp;&nbsp;@T("Please correct the errors and try again.")
        <p>@Html.ValidationSummary()</p>
    </div>
}

<h1>@Html.TitleForPage(T("Lost Password").ToString())</h1>
<div class="well">
    <p>@T("Please enter your username or email address. You will receive a link to create a new password via email.")</p>
    @using (Html.BeginFormAntiForgeryPost(null, FormMethod.Post, formDictionary)) {
        <fieldset>
            <legend>@T("Account Information")</legend>
            <div class="form-group"
                 data-ng-class="{ 'has-error': lostForm.username.$dirty && lostForm.username.$invalid }">
                <label for="username" class="control-label">@T("Username or E-mail")</label>
                <input type="text" name="username" class="form-control" required
                       data-ng-model="lost.username" />
            </div>
            <div class="form-group">
                <button class="primaryAction btn btn-primary" type="submit"
                        data-ng-disabled="lostForm.$invalid">@T("Send Request")</button>
            </div>
        </fieldset>
}
</div>